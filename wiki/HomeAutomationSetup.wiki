#summary Configuration for home automation

== Introduction ==

Upon arrival at home, I have the system perform a couple of actions:
  * Wake computer from suspend mode
  * Turn on lights

== Wake-On-LAN Configuration ==

Setting up Wake-On-LAN (WOL) was somewhat complicated, as I have two "daisy-chained" WRT54GL routers, with [http://www.dd-wrt.com/site/support/router-database DD-WRT] on both.  Both routers use NAT.

The "top-level" router provides wireless internet for the apartment, while the second router serves as a wireless client, providing hard-wired ethernet in my room.

Since the Android device connects to the top-level router, the "Magic Packet" must be across the second router. Normally, the magic packet is transmitted on the "broadcast address" of the subnet, but I was unable set up port forwarding to the broadcast address on the secondary router.  I was able to forward port 9 to a specific IP address on the subnet, but as I learned, the magic packet targets a specific MAC address, and the association between MAC and IP can be lost when a host is suspended.  To prevent this, I followed [http://www.dd-wrt.com/wiki/index.php/WOL#Remote_Wake_On_LAN_via_Port_Forwarding these instructions] to create a static ARP entry, using my own IP and MAC address:
{{{
ip neigh change 192.168.1.3 lladdr ab:cd:ef:ab:cd:ef nud permanent dev br0
ip neigh add 192.168.1.3 lladdr ab:cd:ef:ab:cd:ef nud permanent dev br0
}}}

== Light Control ==
I use a [http://www.x10.com/products/x10_cm19a.htm CM19A] (obtained [http://shop.ebay.com/?&_nkw=cm19a cheaply] on eBay), TM751 (X10 Wireless transceiver), and several lamp (LM465) and appliance (AM466) modules.

I tweaked [http://m.lemays.org/projects/x10-cm19a-linux-driver one of the several] Python USB scripts for operating the CM19A.